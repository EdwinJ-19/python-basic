OOPS in Python:

Object Oriented Programming Language: refers to a type of computer programming in which programmers of data structure.

features: object, class, encapsulation, inheritance, polymorphism, abstraction.

in python we called attributes(like students have roll number,name, dob, age) as variables.

Object: real world entity; object= identity,state and behavior

class: it is a blueprint of an object that takes behavior and the state or it takes object to bind together that takes as attributes and their method.
attribute: name,roll number, dob 
method: def displaystudent(): /block of statement/ displaystudent()

inheritance: inherit the property from the existence.
single inheritance: super class (base class) <-- sub class (derived class), hierarchial inheritance: super class <-- sub class 1,2,3 , multilevel inheritance: super class <- sub class 1 <- sub class 2, multiple inheritance: super class 1, super class 2 <-- sub class.

polymorphism: it means the ability to take various forms, method overloading: same method/parameter and different classes. method overriding: different parameter and same classes.

global: outside the variable and local: within the variable

constructor:
there are three ways to create the object attributes.
1) directly define the attribute using objectname: objname.attribute =value
2) using object method define common attribute for all the object 

the file may be opened in one of the following modes:
modes->description
r-> open a file for read only
w-> open a file for write only
a-> open a file for write only
x->creates a new file for write only
r+ -> open a file for read/write. file pointer starts at the beginnig of the file
w+ -> open a file for read/write. erase the content of the file to start with new.

inheritance:

it is the capability of one class to derive or inherit the properties from another class.
Benefit is: It represents real-world relationship

